class dsu{
    public : 
            int *par,*rankArr;
            int comp=0;
            dsu(int n){
                par=new int [n+1];
                rankArr=new int [n+1];
                for(int i=0;i<=n;i++){
                    par[i]=i;
                    rankArr[i]=1;
                }
                comp=n;
            }

             ~dsu() {   
        delete[] par;
        delete[] rankArr;
    }

            int find(int x){
                    int idx=x;
                    while(idx!=par[idx]){
                        par[idx]=par[par[idx]];
                         idx=par[idx];
                    }
                    return idx;
            }

            bool unite(int x,int y){
                x=find(x),y=find(y);
                 if(x==y) return true;

                comp--;
                 if(rankArr[x]<rankArr[y]){
                    rankArr[y]+=rankArr[x];
                    par[x]=y;
                 }
                 else {
                     rankArr[x]+=rankArr[y];
                    par[y]=x;
                 }

                return false;
            }
};
