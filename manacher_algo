 struct Manacher {
        vector<int> p;
        string t;

        void build(string& s) {
            t = "#";
            for (char v : s) {
                t += v;
                t += "#";
            }
            run_manacher(t);
        }

        void run_manacher( string& s) {
            int n = s.size();
            p.assign(n, 0);
            int c = 0, r = 0;

            for(int i=0;i<n;i++){
                int mirror=2*c-i;
                if(i<r) p[i]=min(r-i,p[mirror]);
                while(i-p[i]-1>=0  && i+p[i]+1<n && s[i-p[i]-1]==s[i+p[i]+1]) p[i]++;
                if(i+p[i]>r){
                    c=i;
                    r=i+p[i];
                }
            }

            
        }


int getLps(int cen,int odd){
    int pos=2*cen+1 +(!odd);
    return  p[pos];
}
        bool checkPalindrome(int l, int r) {
          if((r-l+1)<=getLps((l+r)/2,l%2==r%2)) return 1;
          else return 0;
        }
    };
